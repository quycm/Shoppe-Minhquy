{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","Datacharacter","map","row","index","key","name","job","className","onClick","removeCharacter","Table","charactersData","From","state","initialState","handleChange","event","target","value","console","log","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","_character","i","character","ReactDOM","render","document","getElementById"],"mappings":"kOAGMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,mCACA,yCAoBVC,EAAY,SAACC,GAEf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAAN,OACjC,wBAAIC,IAAKD,GACI,4BAAKD,EAAIG,MACN,4BAAKH,EAAII,KACT,4BAAI,4BAAQC,UAAU,kBAAkBC,QAAS,kBAAMV,EAAMW,gBAAgBN,KAAzE,eAIxB,OAAO,+BAAQJ,IAmBJW,EAdD,SAACZ,GAAU,IAEba,EAAoCb,EAApCa,eAAgBF,EAAoBX,EAApBW,gBAEpB,OACI,2BAAOF,UAAY,SACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWP,cAAeW,EAAgBF,gBAAiBA,M,OCE5DG,E,4MAhDXC,MAAQ,CACNC,aAAe,CACbT,KAAO,GACPC,IAAM,K,EAIVS,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBZ,EADe,EACfA,KAAMa,EADS,EACTA,MACfC,QAAQC,IAAI,OAAOJ,GACjB,EAAKK,SAAL,eACGhB,EAAOa,IAGVC,QAAQC,IAAIF,I,EAEdI,WAAa,WACX,EAAKxB,MAAMyB,aAAa,EAAKV,OAC7B,EAAKQ,SAAS,EAAKP,e,uDAEX,IAAD,EACeU,KAAKX,MAAnBR,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,0BAAMC,UAAY,cAChB,2BAAOkB,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLrB,KAAK,OACLsB,GAAG,OACHT,MAAOb,EACPuB,SAAUJ,KAAKT,eACjB,2BAAOU,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLrB,KAAK,MACLsB,GAAG,MACHT,MAAOZ,EACPsB,SAAUJ,KAAKT,eACf,2BAAOW,KAAK,SAASR,MAAM,SAASX,UAAU,kBAAkBC,QAASgB,KAAKF,kB,GA1CzEO,aCqDJC,E,4MA/CXjB,MAAQ,CACJkB,WAAY,CACR,CACI1B,KAAM,UACNC,IAAK,WAGT,CACID,KAAM,MACNC,IAAK,MAGT,CACID,KAAM,QACNC,IAAK,S,EAKjBG,gBAAkB,SAACN,GAAW,IAElB4B,EAAe,EAAKlB,MAApBkB,WAER,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAYC,GACvC,OAAOA,IAAM/B,Q,EAKzBoB,aAAe,SAACY,GACZ,EAAKd,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKlB,MAAMkB,YAAjB,CAA6BI,O,uDAEhD,IAEEJ,EAAeP,KAAKX,MAApBkB,WAGR,OACI,yBAAKxB,UAAU,aACX,kBAAC,EAAD,CAAOE,gBAAiBe,KAAKf,gBAAiBE,eAAgBoB,IAC9D,kBAAC,EAAD,CAAMR,aAAgBC,KAAKD,oB,GA7CzBM,a,MCMlBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1b92dfb0.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst TableHeader = () => { \n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    );\n}\n\n// const TableBody = props => { \n//     const rows = props.charactersData.map((row, index) => {\n//         return (\n//             <tr key={index}>\n//                 <td>{row.name}</td>\n//                 <td>{row.job}</td>\n//                 <td><button className=\"btn btn-primary\" onClick={() => props.removeCharacter(index)}>Delete</button></td>\n//             </tr>\n//         );\n//     });\n//     return <tbody>{rows}</tbody>;\n\n// }\n\nconst TableBody = (props) => {\n    // Đặt tên thuộc tính cho <Table/>\n    const rows = props.Datacharacter.map((row, index) => (\n        <tr key={index}>\n                     <td>{row.name}</td>\n                        <td>{row.job}</td>\n                        <td><button className=\"btn btn-primary\" onClick={() => props.removeCharacter(index)}>Delete</button></td>\n                    </tr>\n    )\n    );\n    return <tbody>{rows}</tbody>\n}\n\n\n\nconst Table = (props) => {\n    // Nhận data từ thằng cha App thông qua props\n    const { charactersData, removeCharacter } = props;\n    \n        return (\n            <table className = \"table\">\n                <TableHeader />\n                <TableBody Datacharacter={charactersData} removeCharacter={removeCharacter} />\n            </table>\n        );\n\n}\n\n\nexport default Table","import React, {Component} from 'react'\n\nclass From extends Component {\n    \n\n    state = {\n      initialState : { \n        name : '',\n        job : '',\n    }\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n      console.log('hjhg',event);\n        this.setState({\n          [name]: value,\n          \n        })\n        console.log(value);\n      }\n      submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n      }\n      render() {\n        const { name, job } = this.state;\n      \n        return (\n          <form className = 'form-group'>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={this.handleChange} />\n            <label htmlFor=\"job\">Job</label>\n            <input\n              type=\"text\"\n              name=\"job\"\n              id=\"job\"\n              value={job}\n              onChange={this.handleChange} />\n              <input type=\"button\" value=\"Submit\" className=\"btn btn-primary\" onClick={this.submitForm} />\n          </form>\n        );\n      }\n\n      \n\n}\n\nexport default From","import React, { Component } from 'react';\nimport Table from './Table';\nimport From from './Form';\n\nclass App extends Component {\n\n    // Khởi tạo object state \n    // Bên trong state có tạo thuộc tính là mảng đối tượng chứa data \n    state = {\n        characters: [\n            {\n                name: 'Charlie',\n                job: 'Janitor',\n            },\n\n            {\n                name: 'Quy',\n                job: 'IT',\n            },\n\n            {\n                name: 'Trung',\n                job: 'IOT',\n            },\n\n        ],\n    };\n    removeCharacter = (index) => {\n\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((_character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]})\n      }\n    render() {\n\n        const { characters } = this.state;\n\n        \n        return (\n            <div className=\"container\">\n                <Table removeCharacter={this.removeCharacter} charactersData={characters}  />\n                <From handleSubmit = {this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Table />, document.getElementById('root'));\n"],"sourceRoot":""}